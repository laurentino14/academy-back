// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  INSTRUCTOR
  ADMIN
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY

  @@map("days")
}

model User {
  id                 String    @id @map("_id") @db.ObjectId
  role               Role
  doc                String    @unique
  name               String
  email              String    @unique
  birthdate          String
  password           String
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  workouts           Workout[] @relation(name: "user")
  instructorWorkouts Workout[] @relation(name: "instructor")

  @@map("users")
}

model Exercise {
  id          String   @id @map("_id") @db.ObjectId
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Sets        Set[]

  @@map("exercises")
}

model Set {
  id         String   @id @map("_id")
  reps       Int
  weight     Int?
  day        Day
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String   @db.ObjectId
  Workout    Workout? @relation(fields: [workoutId], references: [id])
  workoutId  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("sets")
}

model Workout {
  id           String   @id @map("_id")
  name         String
  active       Boolean
  sets         Set[]
  User         User     @relation(name: "user", fields: [userId], references: [id])
  userId       String   @db.ObjectId
  Instructor   User?    @relation(name: "instructor", fields: [instructorId], references: [id])
  instructorId String   @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("workouts")
}
